#!/usr/bin/env bash
# esp-validate - basic sanity checks for ESP device input
# Usage: esp-validate [--non-interactive] [/dev/sdXn]
#
# Options:
#   --non-interactive  Skip confirmation prompts for automated scripts

set -euo pipefail

NON_INTERACTIVE=false

# Parse arguments
while [[ $# -gt 0 ]]; do
  case $1 in
    --non-interactive)
      NON_INTERACTIVE=true
      shift
      ;;
    -*)
      echo "[esp-validate] Unknown option: $1" >&2
      exit 1
      ;;
    *)
      ESP_DEV="$1"
      shift
      ;;
  esac
done

ESP_DEV="${ESP_DEV:-}"

fail_or_confirm() {
  local reason="$1"
  local is_validation_failure="${2:-true}"  # Default to true for validation failures
  
  if [[ "$is_validation_failure" == "true" ]]; then
    # This is a validation failure - always exit regardless of interactive mode
    echo "[esp-validate] ERROR: $reason" >&2
    echo "[esp-validate] Cannot proceed with invalid ESP device." >&2
    exit 1
  else
    # This is just a confirmation prompt for a valid device
    echo "[esp-validate] WARNING: $reason" >&2
    
    if [[ "$NON_INTERACTIVE" == "true" ]]; then
      echo "[esp-validate] Non-interactive mode: proceeding with confirmation." >&2
      return 0
    fi
    
    echo "[esp-validate] Proceeding may leave your system unbootable or cause data loss." >&2
    echo "[esp-validate] You should abort unless you know exactly what you're doing." >&2
    read -rp "[esp-validate] Type 'yes' to continue or anything else to abort: " resp
    if [[ "$resp" != "yes" ]]; then
      echo "[esp-validate] Aborting at user request." >&2
      exit 1
    fi
  fi
}

if [[ -z "$ESP_DEV" ]]; then
  echo "[esp-validate] No ESP device specified; skipping validation" >&2
  exit 0
fi

if [[ ! -e "$ESP_DEV" ]]; then
  fail_or_confirm "$ESP_DEV does not exist." true
fi

if [[ ! -b "$ESP_DEV" ]]; then
  fail_or_confirm "$ESP_DEV is not a block device." true
fi

fstype=$(lsblk -no FSTYPE "$ESP_DEV" 2>/dev/null || true)
partlabel=$(lsblk -no PARTLABEL "$ESP_DEV" 2>/dev/null || true)
if [[ "$fstype" != "vfat" ]] || [[ -n "$partlabel" && ! "$partlabel" =~ [Ee][Ff][Ii] ]]; then
  fail_or_confirm "$ESP_DEV does not appear to be an EFI System Partition (FSTYPE=$fstype PARTLABEL=$partlabel)." true
else
  echo "[esp-validate] $ESP_DEV looks like a valid EFI System Partition (FSTYPE=$fstype PARTLABEL=$partlabel)." >&2
  
  if [[ "$NON_INTERACTIVE" == "true" ]]; then
    echo "[esp-validate] Non-interactive mode: proceeding with valid ESP device." >&2
  else
    read -rp "[esp-validate] Type 'yes' to continue or anything else to abort: " resp
    if [[ "$resp" != "yes" ]]; then
      echo "[esp-validate] Aborting at user request." >&2
      exit 1
    fi
  fi
fi
